server:
  port: 0 # 0: random port -> 단일 컨테이너 환경이라면 추천 
          # ${random.int(50000,51000)} -> port 범위지정 안쓰는게 좋다.
  #servlet:
  #  context-path: /user-service 

# actuator 기능 사용을 위한 설정 
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh
        
  
spring:
  application:
    name: user-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
#  datasource:
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://localhost:3306/ecommerce?characterEncoding=UTF-8&serverTimezone=UTC
#    username: root
#    password: root
#  jpa:
#    database-platform: org.hibernate.dialect.MariaDB103Dialect
#    hibernate:
#      ddl-auto: create
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true 
     

logging:
  level: 
    '[com.ecommerce.userservice.user.client]': DEBUG

    org:
      hibernate:
        type:
          descriptor:
            sql: trace #show parameter binding
      SQL: DEBUG        

eureka:
  instance: #instance-id를 지정해줌으로써, random시 0번 하나만 보이는 경우 막음
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    #instance-id:  ${spring.application.name}:${server.port}
  client:
    register-with-eureka: true #eureka client로 등록
    fetch-registry: true #Eureka 서버로부터 인스턴스들의 정보를 주기적으로 가져옴, 갱신된 정보를 받겠다는 설정
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka # eureka url 지정

greeting:
  message: Welcome to the Simple E-Commerce.                         
   